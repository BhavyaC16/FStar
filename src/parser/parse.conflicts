
** Conflict (shift/reduce) in state 646.
** Token involved: BAR
** This state is reached from term after reading:

FUNCTION disjunctivePattern maybeFocusArrow TRY term WITH reverse_left_flexible_nonempty_list(BAR,patternBranch) 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

term 
greedyTerm 
FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
         (?)

** In state 646, looking ahead at BAR, reducing production
** greedyTerm -> TRY term WITH reverse_left_flexible_nonempty_list(BAR,patternBranch) 
** is permitted because of the following sub-derivation:

reverse_left_flexible_nonempty_list(BAR,patternBranch) BAR patternBranch // lookahead token appears
patternBranch // lookahead token is inherited
disjunctivePattern maybeFocusArrow term // lookahead token is inherited
                                   greedyTerm // lookahead token is inherited
                                   TRY term WITH reverse_left_flexible_nonempty_list(BAR,patternBranch) . 

** In state 646, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

patternBranch 
disjunctivePattern maybeFocusArrow term 
                                   greedyTerm 
                                   TRY term WITH reverse_left_flexible_nonempty_list(BAR,patternBranch) 
                                                 reverse_left_flexible_nonempty_list(BAR,patternBranch) . BAR patternBranch 

** Conflict (shift/reduce) in state 616.
** Token involved: BAR
** This state is reached from term after reading:

FUNCTION disjunctivePattern maybeFocusArrow MATCH term WITH reverse_left_flexible_list(BAR,__anonymous_6) 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

term 
greedyTerm 
FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
         (?)

** In state 616, looking ahead at BAR, reducing production
** greedyTerm -> MATCH term WITH reverse_left_flexible_list(BAR,__anonymous_6) 
** is permitted because of the following sub-derivation:

reverse_left_flexible_nonempty_list(BAR,patternBranch) BAR patternBranch // lookahead token appears
patternBranch // lookahead token is inherited
disjunctivePattern maybeFocusArrow term // lookahead token is inherited
                                   greedyTerm // lookahead token is inherited
                                   MATCH term WITH reverse_left_flexible_list(BAR,__anonymous_6) . 

** In state 616, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

patternBranch 
disjunctivePattern maybeFocusArrow term 
                                   greedyTerm 
                                   MATCH term WITH reverse_left_flexible_list(BAR,__anonymous_6) 
                                                   reverse_left_flexible_list(BAR,__anonymous_6) . BAR patternBranch 

** Conflict (shift/reduce) in state 599.
** Token involved: BAR
** This state is reached from term after reading:

FUNCTION disjunctivePattern maybeFocusArrow FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

term 
greedyTerm 
FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
         (?)

** In state 599, looking ahead at BAR, reducing production
** greedyTerm -> FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
** is permitted because of the following sub-derivation:

reverse_left_flexible_nonempty_list(BAR,patternBranch) BAR patternBranch // lookahead token appears
patternBranch // lookahead token is inherited
disjunctivePattern maybeFocusArrow term // lookahead token is inherited
                                   greedyTerm // lookahead token is inherited
                                   FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) . 

** In state 599, looking ahead at BAR, shifting is permitted
** because of the following sub-derivation:

patternBranch 
disjunctivePattern maybeFocusArrow term 
                                   greedyTerm 
                                   FUNCTION reverse_left_flexible_nonempty_list(BAR,patternBranch) 
                                            reverse_left_flexible_nonempty_list(BAR,patternBranch) . BAR patternBranch 
